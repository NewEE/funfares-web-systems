<!DOCTYPE html>
<html>
  <head>
    <title><%=typeof title == 'undefined' ? 'Fanfares' : title%></title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/A_BS/bootstrap-grid.css">
    <link rel="stylesheet" href="/styles/A_BS/bootstrap-grid.min.css">
    <link rel="stylesheet" href="/styles/A_BS/bootstrap-reboot.css">
    <link rel="stylesheet" href="/styles/A_BS/bootstrap-reboot.min.css">
    <link rel="stylesheet" href="/styles/A_BS/bootstrap.css">
    <link rel="stylesheet" href="/styles/A_BS/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/B_Range/ion.rangeSlider.css">
    <link rel="stylesheet" href="/styles/B_Range/ion.rangeSlider.skinHTML5.css">
    <link rel="stylesheet" href="/styles/B_Range/normalize.css">
    <link rel="stylesheet" href="/styles/C_Others/FUNFARES.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->
  </head>


  <body >

    <!-- nevigation -->
    <%
      var username = 'Vistor';
      var isLogin = false;
      if( typeof req.session.UserInfo != 'undefined') {
        username = req.session.UserInfo.UserName;
        isLogin = true;
      }

    %>
    <div class="card-header col-12">
      <nav class="nav nav-pills card-header-pills" >
      <a class="nav-link" href="/Fanfares/index/?page=1">Funfares</a>
      <a class="nav-link" href="/Fanfares/search/?page=1&Region=&BPRange=&EPRange=& B_Dates=& E_Dates=">Search</a>
      <a class="nav-link" href="/Fanfares/create">Create</a>
      <a class="nav-link" href="/Fanfares/admin/?page=1">Admin</a>
      <a class="nav-link" href="/Order/showOrder/?page=1">My Order</a>
      <a class="nav-link " href="/User/login/">Login</a>
      <a class="nav-link " href="/User/logout/">Logout</a>

      <a class="nav-link " href="#">Hi, Welcome Back [<%= username %> ]</a>


      </nav>
    </div>

    <div class=" jumbotron jumbotron-fluid">
      <div class="container">
        <h1 class="display-3">FunFares&nbsp;<img class="img-fluid" src="/images/imgs/plane.PNG" alt="Card image cap"></h1>
        <p class="lead">Limited time. Limited seats. Full of Fun.</p>
      </div>
    </div>

    <!-- import the dynamic pages -->
    <%- body %>







    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!-- jQuery first, then Tether, then Bootstrap JS.
    <script src="https://code.jquery.com/jquery-3.1.1.slim.min.js" integrity="sha384-A7FZj7v+d/sdmMqp/nOQwliLvUsJfDHW+k9Omg/a/EheAdgtzNs3hpfag6Ed950n" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js" integrity="sha384-DztdAPBWPRXSA/3eYEEUWrWCy7G5KFbe8fFjk5JAIxUYHKkDx6Qin1DkWx51bBrb" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script>
-->

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/dependencies/A_JQ/jquery-1.12.3.min.js"></script>
    <script src="/js/dependencies/B_BootStrap/bootstrap.bundle.js"></script>
    <script src="/js/dependencies/B_BootStrap/bootstrap.bundle.min.js"></script>
    <script src="/js/dependencies/B_BootStrap/bootstrap.js"></script>
    <script src="/js/dependencies/B_BootStrap/bootstrap.min.js"></script>
    <script src="/js/dependencies/C_Others/A/ion.rangeSlider.js"></script>
    <script src="/js/dependencies/C_Others/B/fan.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
